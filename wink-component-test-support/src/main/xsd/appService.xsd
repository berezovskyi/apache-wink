<?xml version="1.0" encoding="UTF-8"?>
<!--
  -*- rnc -*-
  RELAX NG Compact Syntax Grammar for the Atom Protocol
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="qualified"
            targetNamespace="http://www.w3.org/2007/app"
            xmlns:xhtml="http://www.w3.org/1999/xhtml"
            xmlns:atom="http://www.w3.org/2005/Atom"
            xmlns:app="http://www.w3.org/2007/app">

    <xsd:import namespace="http://www.w3.org/1999/xhtml" schemaLocation="xhtml.xsd"/>
    <xsd:import namespace="http://www.w3.org/2007/app" schemaLocation="appCategory.xsd"/>
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
    <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="asf.xsd"/>

    <!-- common:attrs -->
    <xsd:attributeGroup name="appCommonAttributes">
        <xsd:attribute ref="xml:base"/>
        <xsd:attribute ref="xml:lang"/>
        <xsd:attributeGroup ref="app:undefinedAttribute"/>
    </xsd:attributeGroup>
    <xsd:simpleType name="atomDateConstruct">
        <xsd:restriction base="xsd:dateTime"/>
    </xsd:simpleType>
    <xsd:attributeGroup name="atomDateConstruct">
        <xsd:attributeGroup ref="app:appCommonAttributes"/>
    </xsd:attributeGroup>

    <!-- app:service -->
    <xsd:element name="service">
        <xsd:complexType>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="app:workspace"/>
                <!--xsd:group ref="app:extensionElement"/-->
            </xsd:choice>
            <xsd:attributeGroup ref="app:appCommonAttributes"/>
        </xsd:complexType>
    </xsd:element>

    <!-- app:workspace -->
    <xsd:element name="workspace">
        <xsd:complexType>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="atom:title"/>
                <xsd:element ref="app:collection"/>
                <!--xsd:group ref="app:extensionElement"/-->
            </xsd:choice>
            <xsd:attributeGroup ref="app:appCommonAttributes"/>
        </xsd:complexType>
    </xsd:element>

    <!-- app:collection -->
    <xsd:element name="collection">
        <xsd:complexType>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="atom:title"/>
                <xsd:element ref="app:accept"/>
                <xsd:group ref="app:appCategories"/>
                <!--xsd:group ref="app:extensionElement"/-->
            </xsd:choice>
            <xsd:attributeGroup ref="app:appCommonAttributes"/>
            <xsd:attribute name="href" use="required"/>
        </xsd:complexType>
    </xsd:element>

    <!-- app:accept -->
    <xsd:element name="accept">
        <xsd:complexType>
            <xsd:simpleContent>
                <xsd:restriction base="xsd:anyType">
                    <xsd:simpleType>
                        <xsd:union memberTypes="app:appTypeValue">
                            <xsd:simpleType>
                                <xsd:restriction base="xsd:token">
                                    <xsd:length value="0"/>
                                </xsd:restriction>
                            </xsd:simpleType>
                        </xsd:union>
                    </xsd:simpleType>
                    <xsd:attributeGroup ref="app:appCommonAttributes"/>
                </xsd:restriction>
            </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>
    <xsd:simpleType name="appTypeValue">
        <xsd:union memberTypes="app:media-type app:entry-or-media-type">
            <xsd:simpleType>
                <xsd:restriction base="xsd:token">
                    <xsd:enumeration value="entry"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:union>
    </xsd:simpleType>
    <xsd:simpleType name="media-type">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="entry,(.+/.+,?)*"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="entry-or-media-type">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="(.+/.+,?)*"/>
        </xsd:restriction>
    </xsd:simpleType>

    <!-- above is an approximation, rnc doesn't support interleaved text -->
    <!-- Simple Extension -->
    <xsd:group name="simpleExtensionElement">
        <xsd:choice>
            <xsd:any namespace="##other" processContents="skip"/>
            <xsd:any namespace="##local" processContents="skip"/>
        </xsd:choice>
    </xsd:group>
    <!-- Structured Extension -->
    <xsd:group name="structuredExtensionElement">
        <xsd:choice>
            <xsd:any namespace="##other" processContents="skip"/>
            <xsd:any namespace="##local" processContents="skip"/>
        </xsd:choice>
    </xsd:group>
    <!-- Other Extensibility -->
    <xsd:group name="extensionElement">
        <xsd:choice>
            <xsd:group ref="app:simpleExtensionElement"/>
            <xsd:group ref="app:structuredExtensionElement"/>
        </xsd:choice>
    </xsd:group>
    <!-- Extensions -->
    <xsd:attributeGroup name="atomPlainTextConstruct">
        <xsd:attributeGroup ref="app:atomCommonAttributes"/>
        <xsd:attribute name="type">
            <xsd:simpleType>
                <xsd:restriction base="xsd:token">
                    <xsd:enumeration value="text"/>
                    <xsd:enumeration value="html"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="atomXHTMLTextConstruct">
        <xsd:attributeGroup ref="app:atomCommonAttributes"/>
        <xsd:attribute name="type" use="required">
            <xsd:simpleType>
                <xsd:restriction base="xsd:token">
                    <xsd:enumeration value="xhtml"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:group name="anyXHTML">
        <xsd:sequence>
            <xsd:element minOccurs="0" ref="xhtml:div"/>
        </xsd:sequence>
    </xsd:group>
</xsd:schema>
        <!-- EOF -->
